#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLNS_LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNS")]
	public partial class QLNSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDANGNHAP(DANGNHAP instance);
    partial void UpdateDANGNHAP(DANGNHAP instance);
    partial void DeleteDANGNHAP(DANGNHAP instance);
    partial void InsertDUAN(DUAN instance);
    partial void UpdateDUAN(DUAN instance);
    partial void DeleteDUAN(DUAN instance);
    partial void InsertHOPDONG(HOPDONG instance);
    partial void UpdateHOPDONG(HOPDONG instance);
    partial void DeleteHOPDONG(HOPDONG instance);
    partial void InsertLUONG(LUONG instance);
    partial void UpdateLUONG(LUONG instance);
    partial void DeleteLUONG(LUONG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    partial void InsertPHONGBAN(PHONGBAN instance);
    partial void UpdatePHONGBAN(PHONGBAN instance);
    partial void DeletePHONGBAN(PHONGBAN instance);
    partial void InsertTHANNHAN(THANNHAN instance);
    partial void UpdateTHANNHAN(THANNHAN instance);
    partial void DeleteTHANNHAN(THANNHAN instance);
    partial void InsertTHOIVIEC(THOIVIEC instance);
    partial void UpdateTHOIVIEC(THOIVIEC instance);
    partial void DeleteTHOIVIEC(THOIVIEC instance);
    #endregion
		
		public QLNSDataContext() : 
				base(global::QLNS_LinQ.Properties.Settings.Default.QLNSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DANGNHAP> DANGNHAPs
		{
			get
			{
				return this.GetTable<DANGNHAP>();
			}
		}
		
		public System.Data.Linq.Table<DUAN> DUANs
		{
			get
			{
				return this.GetTable<DUAN>();
			}
		}
		
		public System.Data.Linq.Table<HOPDONG> HOPDONGs
		{
			get
			{
				return this.GetTable<HOPDONG>();
			}
		}
		
		public System.Data.Linq.Table<LUONG> LUONGs
		{
			get
			{
				return this.GetTable<LUONG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
		
		public System.Data.Linq.Table<PHONGBAN> PHONGBANs
		{
			get
			{
				return this.GetTable<PHONGBAN>();
			}
		}
		
		public System.Data.Linq.Table<THANNHAN> THANNHANs
		{
			get
			{
				return this.GetTable<THANNHAN>();
			}
		}
		
		public System.Data.Linq.Table<THOIVIEC> THOIVIECs
		{
			get
			{
				return this.GetTable<THOIVIEC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGNHAP")]
	public partial class DANGNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public DANGNHAP()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_DANGNHAP", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.DANGNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.DANGNHAPs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DUAN")]
	public partial class DUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDA;
		
		private string _TenDA;
		
		private string _DiaDiem;
		
		private string _Phong;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDAChanging(string value);
    partial void OnMaDAChanged();
    partial void OnTenDAChanging(string value);
    partial void OnTenDAChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    partial void OnPhongChanging(string value);
    partial void OnPhongChanged();
    #endregion
		
		public DUAN()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDA", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDA
		{
			get
			{
				return this._MaDA;
			}
			set
			{
				if ((this._MaDA != value))
				{
					this.OnMaDAChanging(value);
					this.SendPropertyChanging();
					this._MaDA = value;
					this.SendPropertyChanged("MaDA");
					this.OnMaDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDA", DbType="NVarChar(50)")]
		public string TenDA
		{
			get
			{
				return this._TenDA;
			}
			set
			{
				if ((this._TenDA != value))
				{
					this.OnTenDAChanging(value);
					this.SendPropertyChanging();
					this._TenDA = value;
					this.SendPropertyChanged("TenDA");
					this.OnTenDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(50)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="Char(10)")]
		public string Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DUAN_PHANCONG", Storage="_PHANCONGs", ThisKey="MaDA", OtherKey="MaDA")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_DUAN", Storage="_PHONGBAN", ThisKey="Phong", OtherKey="MaPB", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.DUANs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.DUANs.Add(this);
						this._Phong = value.MaPB;
					}
					else
					{
						this._Phong = default(string);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.DUAN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.DUAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOPDONG")]
	public partial class HOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private System.Nullable<int> _ThoiHan;
		
		private string _ViTri;
		
		private string _MoTa;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<THOIVIEC> _THOIVIECs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnThoiHanChanging(System.Nullable<int> value);
    partial void OnThoiHanChanged();
    partial void OnViTriChanging(string value);
    partial void OnViTriChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public HOPDONG()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._THOIVIECs = new EntitySet<THOIVIEC>(new Action<THOIVIEC>(this.attach_THOIVIECs), new Action<THOIVIEC>(this.detach_THOIVIECs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiHan", DbType="Int")]
		public System.Nullable<int> ThoiHan
		{
			get
			{
				return this._ThoiHan;
			}
			set
			{
				if ((this._ThoiHan != value))
				{
					this.OnThoiHanChanging(value);
					this.SendPropertyChanging();
					this._ThoiHan = value;
					this.SendPropertyChanged("ThoiHan");
					this.OnThoiHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="Char(30)")]
		public string ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="Char(100)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_THOIVIEC", Storage="_THOIVIECs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<THOIVIEC> THOIVIECs
		{
			get
			{
				return this._THOIVIECs;
			}
			set
			{
				this._THOIVIECs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
		
		private void attach_THOIVIECs(THOIVIEC entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_THOIVIECs(THOIVIEC entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUONG")]
	public partial class LUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private System.Nullable<int> _LuongCung;
		
		private System.Nullable<int> _NgayNghi;
		
		private System.Nullable<int> _Phucap;
		
		private System.Nullable<int> _TongLuong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnLuongCungChanging(System.Nullable<int> value);
    partial void OnLuongCungChanged();
    partial void OnNgayNghiChanging(System.Nullable<int> value);
    partial void OnNgayNghiChanged();
    partial void OnPhucapChanging(System.Nullable<int> value);
    partial void OnPhucapChanged();
    partial void OnTongLuongChanging(System.Nullable<int> value);
    partial void OnTongLuongChanged();
    #endregion
		
		public LUONG()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCung", DbType="Int")]
		public System.Nullable<int> LuongCung
		{
			get
			{
				return this._LuongCung;
			}
			set
			{
				if ((this._LuongCung != value))
				{
					this.OnLuongCungChanging(value);
					this.SendPropertyChanging();
					this._LuongCung = value;
					this.SendPropertyChanged("LuongCung");
					this.OnLuongCungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNghi", DbType="Int")]
		public System.Nullable<int> NgayNghi
		{
			get
			{
				return this._NgayNghi;
			}
			set
			{
				if ((this._NgayNghi != value))
				{
					this.OnNgayNghiChanging(value);
					this.SendPropertyChanging();
					this._NgayNghi = value;
					this.SendPropertyChanged("NgayNghi");
					this.OnNgayNghiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phucap", DbType="Int")]
		public System.Nullable<int> Phucap
		{
			get
			{
				return this._Phucap;
			}
			set
			{
				if ((this._Phucap != value))
				{
					this.OnPhucapChanging(value);
					this.SendPropertyChanging();
					this._Phucap = value;
					this.SendPropertyChanged("Phucap");
					this.OnPhucapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongLuong", DbType="Int")]
		public System.Nullable<int> TongLuong
		{
			get
			{
				return this._TongLuong;
			}
			set
			{
				if ((this._TongLuong != value))
				{
					this.OnTongLuongChanging(value);
					this.SendPropertyChanging();
					this._TongLuong = value;
					this.SendPropertyChanged("TongLuong");
					this.OnTongLuongChanged();
				}
			}
		}
		
		
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaHD;
		
		private string _HotenNV;
		
		private System.Nullable<System.DateTime> _NgSinh;
		
		private string _Dchi;
		
		private string _Phai;
		
		private string _MaNQL;
		
		private string _Phong;
		
		private string _Hinh;
		
		private EntitySet<DANGNHAP> _DANGNHAPs;
		
		private EntityRef<LUONG> _LUONG;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<THANNHAN> _THANNHAN;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
		private EntityRef<NHANVIEN> _NHANVIEN1;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnHotenNVChanging(string value);
    partial void OnHotenNVChanged();
    partial void OnNgSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgSinhChanged();
    partial void OnDchiChanging(string value);
    partial void OnDchiChanged();
    partial void OnPhaiChanging(string value);
    partial void OnPhaiChanged();
    partial void OnMaNQLChanging(string value);
    partial void OnMaNQLChanged();
    partial void OnPhongChanging(string value);
    partial void OnPhongChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._DANGNHAPs = new EntitySet<DANGNHAP>(new Action<DANGNHAP>(this.attach_DANGNHAPs), new Action<DANGNHAP>(this.detach_DANGNHAPs));
			this._LUONG = default(EntityRef<LUONG>);
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._THANNHAN = default(EntityRef<THANNHAN>);
			this._HOPDONG = default(EntityRef<HOPDONG>);
			this._NHANVIEN1 = default(EntityRef<NHANVIEN>);
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10)")]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotenNV", DbType="NVarChar(50)")]
		public string HotenNV
		{
			get
			{
				return this._HotenNV;
			}
			set
			{
				if ((this._HotenNV != value))
				{
					this.OnHotenNVChanging(value);
					this.SendPropertyChanging();
					this._HotenNV = value;
					this.SendPropertyChanged("HotenNV");
					this.OnHotenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgSinh
		{
			get
			{
				return this._NgSinh;
			}
			set
			{
				if ((this._NgSinh != value))
				{
					this.OnNgSinhChanging(value);
					this.SendPropertyChanging();
					this._NgSinh = value;
					this.SendPropertyChanged("NgSinh");
					this.OnNgSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dchi", DbType="NVarChar(50)")]
		public string Dchi
		{
			get
			{
				return this._Dchi;
			}
			set
			{
				if ((this._Dchi != value))
				{
					this.OnDchiChanging(value);
					this.SendPropertyChanging();
					this._Dchi = value;
					this.SendPropertyChanged("Dchi");
					this.OnDchiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phai", DbType="NVarChar(5)")]
		public string Phai
		{
			get
			{
				return this._Phai;
			}
			set
			{
				if ((this._Phai != value))
				{
					this.OnPhaiChanging(value);
					this.SendPropertyChanging();
					this._Phai = value;
					this.SendPropertyChanged("Phai");
					this.OnPhaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNQL", DbType="Char(10)")]
		public string MaNQL
		{
			get
			{
				return this._MaNQL;
			}
			set
			{
				if ((this._MaNQL != value))
				{
					if (this._NHANVIEN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNQLChanging(value);
					this.SendPropertyChanging();
					this._MaNQL = value;
					this.SendPropertyChanged("MaNQL");
					this.OnMaNQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="Char(10)")]
		public string Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="NVarChar(300)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_DANGNHAP", Storage="_DANGNHAPs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<DANGNHAP> DANGNHAPs
		{
			get
			{
				return this._DANGNHAPs;
			}
			set
			{
				this._DANGNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_LUONG", ThisKey="MaNV", OtherKey="MaNV", IsUnique=true, IsForeignKey=false)]
		public LUONG LUONG
		{
			get
			{
				return this._LUONG.Entity;
			}
			set
			{
				LUONG previousValue = this._LUONG.Entity;
				if (((previousValue != value) 
							|| (this._LUONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LUONG.Entity = null;
					}
					this._LUONG.Entity = value;
					if ((value != null))
					{
					}
					this.SendPropertyChanged("LUONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaNV", OtherKey="MaNQL")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHANCONG", Storage="_PHANCONGs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_THANNHAN", Storage="_THANNHAN", ThisKey="MaNV", OtherKey="MaNV", IsUnique=true, IsForeignKey=false)]
		public THANNHAN THANNHAN
		{
			get
			{
				return this._THANNHAN.Entity;
			}
			set
			{
				THANNHAN previousValue = this._THANNHAN.Entity;
				if (((previousValue != value) 
							|| (this._THANNHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THANNHAN.Entity = null;
						previousValue.NHANVIEN = null;
					}
					this._THANNHAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIEN = this;
					}
					this.SendPropertyChanged("THANNHAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_NHANVIEN", Storage="_HOPDONG", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHANVIEN", Storage="_NHANVIEN1", ThisKey="MaNQL", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN1
		{
			get
			{
				return this._NHANVIEN1.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN1.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN1.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._NHANVIEN1.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaNQL = value.MaNV;
					}
					else
					{
						this._MaNQL = default(string);
					}
					this.SendPropertyChanged("NHANVIEN1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_PHONGBAN", ThisKey="Phong", OtherKey="MaPB", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._Phong = value.MaPB;
					}
					else
					{
						this._Phong = default(string);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGNHAPs(DANGNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_DANGNHAPs(DANGNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN1 = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN1 = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaDA;
		
		private System.Nullable<int> _ThoiGian;
		
		private EntityRef<DUAN> _DUAN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaDAChanging(string value);
    partial void OnMaDAChanged();
    partial void OnThoiGianChanging(System.Nullable<int> value);
    partial void OnThoiGianChanged();
    #endregion
		
		public PHANCONG()
		{
			this._DUAN = default(EntityRef<DUAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDA", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDA
		{
			get
			{
				return this._MaDA;
			}
			set
			{
				if ((this._MaDA != value))
				{
					if (this._DUAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDAChanging(value);
					this.SendPropertyChanging();
					this._MaDA = value;
					this.SendPropertyChanged("MaDA");
					this.OnMaDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="Int")]
		public System.Nullable<int> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DUAN_PHANCONG", Storage="_DUAN", ThisKey="MaDA", OtherKey="MaDA", IsForeignKey=true)]
		public DUAN DUAN
		{
			get
			{
				return this._DUAN.Entity;
			}
			set
			{
				DUAN previousValue = this._DUAN.Entity;
				if (((previousValue != value) 
							|| (this._DUAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DUAN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._DUAN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaDA = value.MaDA;
					}
					else
					{
						this._MaDA = default(string);
					}
					this.SendPropertyChanged("DUAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHANCONG", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGBAN")]
	public partial class PHONGBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPB;
		
		private string _TenPB;
		
		private string _TrPhong;
		
		private System.Nullable<System.DateTime> _NgNhanChuc;
		
		private string _DiaDiem;
		
		private EntitySet<DUAN> _DUANs;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPBChanging(string value);
    partial void OnMaPBChanged();
    partial void OnTenPBChanging(string value);
    partial void OnTenPBChanged();
    partial void OnTrPhongChanging(string value);
    partial void OnTrPhongChanged();
    partial void OnNgNhanChucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgNhanChucChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    #endregion
		
		public PHONGBAN()
		{
			this._DUANs = new EntitySet<DUAN>(new Action<DUAN>(this.attach_DUANs), new Action<DUAN>(this.detach_DUANs));
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPB", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPB
		{
			get
			{
				return this._MaPB;
			}
			set
			{
				if ((this._MaPB != value))
				{
					this.OnMaPBChanging(value);
					this.SendPropertyChanging();
					this._MaPB = value;
					this.SendPropertyChanged("MaPB");
					this.OnMaPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPB", DbType="Char(10)")]
		public string TenPB
		{
			get
			{
				return this._TenPB;
			}
			set
			{
				if ((this._TenPB != value))
				{
					this.OnTenPBChanging(value);
					this.SendPropertyChanging();
					this._TenPB = value;
					this.SendPropertyChanged("TenPB");
					this.OnTenPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrPhong", DbType="Char(4)")]
		public string TrPhong
		{
			get
			{
				return this._TrPhong;
			}
			set
			{
				if ((this._TrPhong != value))
				{
					this.OnTrPhongChanging(value);
					this.SendPropertyChanging();
					this._TrPhong = value;
					this.SendPropertyChanged("TrPhong");
					this.OnTrPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgNhanChuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgNhanChuc
		{
			get
			{
				return this._NgNhanChuc;
			}
			set
			{
				if ((this._NgNhanChuc != value))
				{
					this.OnNgNhanChucChanging(value);
					this.SendPropertyChanging();
					this._NgNhanChuc = value;
					this.SendPropertyChanged("NgNhanChuc");
					this.OnNgNhanChucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="Char(50)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_DUAN", Storage="_DUANs", ThisKey="MaPB", OtherKey="Phong")]
		public EntitySet<DUAN> DUANs
		{
			get
			{
				return this._DUANs;
			}
			set
			{
				this._DUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaPB", OtherKey="Phong")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DUANs(DUAN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_DUANs(DUAN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THANNHAN")]
	public partial class THANNHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _HotenTN;
		
		private string _VaiTro;
		
		private string _SDT;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHotenTNChanging(string value);
    partial void OnHotenTNChanged();
    partial void OnVaiTroChanging(string value);
    partial void OnVaiTroChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public THANNHAN()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotenTN", DbType="NVarChar(50)")]
		public string HotenTN
		{
			get
			{
				return this._HotenTN;
			}
			set
			{
				if ((this._HotenTN != value))
				{
					this.OnHotenTNChanging(value);
					this.SendPropertyChanging();
					this._HotenTN = value;
					this.SendPropertyChanged("HotenTN");
					this.OnHotenTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTro", DbType="NVarChar(20)")]
		public string VaiTro
		{
			get
			{
				return this._VaiTro;
			}
			set
			{
				if ((this._VaiTro != value))
				{
					this.OnVaiTroChanging(value);
					this.SendPropertyChanging();
					this._VaiTro = value;
					this.SendPropertyChanged("VaiTro");
					this.OnVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_THANNHAN", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.THANNHAN = null;
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.THANNHAN = this;
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THOIVIEC")]
	public partial class THOIVIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNVThoiViec;
		
		private string _MaHD;
		
		private System.Nullable<System.DateTime> _NgayThoiViec;
		
		private string _LyDo;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVThoiViecChanging(string value);
    partial void OnMaNVThoiViecChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnNgayThoiViecChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThoiViecChanged();
    partial void OnLyDoChanging(string value);
    partial void OnLyDoChanged();
    #endregion
		
		public THOIVIEC()
		{
			this._HOPDONG = default(EntityRef<HOPDONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNVThoiViec", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNVThoiViec
		{
			get
			{
				return this._MaNVThoiViec;
			}
			set
			{
				if ((this._MaNVThoiViec != value))
				{
					this.OnMaNVThoiViecChanging(value);
					this.SendPropertyChanging();
					this._MaNVThoiViec = value;
					this.SendPropertyChanged("MaNVThoiViec");
					this.OnMaNVThoiViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThoiViec", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThoiViec
		{
			get
			{
				return this._NgayThoiViec;
			}
			set
			{
				if ((this._NgayThoiViec != value))
				{
					this.OnNgayThoiViecChanging(value);
					this.SendPropertyChanging();
					this._NgayThoiViec = value;
					this.SendPropertyChanged("NgayThoiViec");
					this.OnNgayThoiViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyDo", DbType="NVarChar(200)")]
		public string LyDo
		{
			get
			{
				return this._LyDo;
			}
			set
			{
				if ((this._LyDo != value))
				{
					this.OnLyDoChanging(value);
					this.SendPropertyChanging();
					this._LyDo = value;
					this.SendPropertyChanged("LyDo");
					this.OnLyDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_THOIVIEC", Storage="_HOPDONG", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.THOIVIECs.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.THOIVIECs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
